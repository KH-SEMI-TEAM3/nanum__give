<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.semi.board.model.mapper.QNABoardMapper">






	<select id="selectBoardTypeList">
		SELECT BOARD_CODE "boardCode" , BOARD_NAME "boardName"
		FROM "BOARD_TYPE" ORDER BY BOARD_CODE
	</select>














	<select id="getQNAListCount">

		SELECT COUNT(*) FROM "BOARD" WHERE BOARD_DEL_FL = 'N' AND BOARD_CODE =
		#{boardCode}

	</select>






	<!-- 특정 게시판의 지정된 페이지를 조회한다 -->
	<select id="selectQNABoardList">

		SELECT BOARD_CODE, BOARD_NO, BOARD_TITLE, READ_COUNT, MEMBER_NICKNAME,
		BOARD_CONTENT,

		QA_STATUS AS qaStatus,
		(SELECT COUNT(*) FROM "COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO AND
		C.COMMENT_DEL_FL = 'N') COMMENT_COUNT,
		(SELECT COUNT(*) FROM "JJIM" L WHERE L.BOARD_NO = B.BOARD_NO ) LIKE_COUNT , 


<![CDATA[

	CASE 	
	WHEN SYSDATE -  BOARD_WRITE_DATE < (1/24/60)
	THEN  FLOOR( (SYSDATE - BOARD_WRITE_DATE) * 24*60*60) || '초 전'
	
	WHEN SYSDATE -  BOARD_WRITE_DATE < (1/24)
	THEN  FLOOR( (SYSDATE - BOARD_WRITE_DATE) * 24*60) || '분 전'
	
	WHEN SYSDATE - BOARD_WRITE_DATE < 1
	THEN  FLOOR( (SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'

ELSE TO_CHAR(BOARD_WRITE_DATE,'YYYY-MM-DD') 
END BOARD_WRITE_DATE -- 컬럼의 별칭 지정

]]>

		FROM BOARD B
		JOIN "MEMBER" M ON (B.MEMBER_NO = M.MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N' AND BOARD_CODE = #{boardCode} ORDER BY BOARD_NO
		DESC

	</select>



	<!-- 검색 결과 개수 -->
	<select id="getSearchCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = 4
		AND BOARD_TITLE LIKE '%' || #{query} ||
	</select>




	<select id="selectByMember" resultType="Board">
		SELECT * FROM BOARD
		WHERE MEMBER_NO = #{memberNo}
		AND BOARD_CODE = 4
		AND BOARD_DEL_FL = 'N'
		ORDER BY BOARD_NO DESC
	</select>



	<update id="updateCompletion">
		UPDATE "BOARD" SET
		QA_STATUS = #{qaStatus}
		WHERE
		BOARD_NO = #{boardNo}
	</update>






<select id="selectSearchList">

SELECT BOARD_CODE, BOARD_NO, BOARD_TITLE, READ_COUNT, MEMBER_NICKNAME,  
 QA_STATUS,
(SELECT COUNT(*) FROM "COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO  AND C.COMMENT_DEL_FL = 'N') COMMENT_COUNT,

 
<![CDATA[

	CASE 	
	WHEN SYSDATE -  BOARD_WRITE_DATE < (1/24/60)
	THEN  FLOOR( (SYSDATE - BOARD_WRITE_DATE) * 24*60*60) || '초 전'
	
	WHEN SYSDATE -  BOARD_WRITE_DATE < (1/24)
	THEN  FLOOR( (SYSDATE - BOARD_WRITE_DATE) * 24*60) || '분 전'
	
	WHEN SYSDATE - BOARD_WRITE_DATE < 1
	THEN  FLOOR( (SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'

ELSE TO_CHAR(BOARD_WRITE_DATE,'YYYY-MM-DD') 
END BOARD_WRITE_DATE -- 컬럼의 별칭 지정

]]>

FROM BOARD B 
JOIN "MEMBER" M ON (B.MEMBER_NO = M.MEMBER_NO) 


WHERE BOARD_DEL_FL = 'N' AND BOARD_CODE = #{boardCode} 




<choose>
<!-- 제목 검색 (key의 값이 "t"인 경우) -->

<when test='key=="t"'>
AND BOARD_TITLE LIKE '%' || #{query} || '%'
<!-- %{#qurey}%  는 #query 자체를 검색하도록 인식함-->
</when>


<!-- 제목 검색 (key의 값이 "t"인 경우) -->





<when test='key=="c"'>
AND BOARD_CONTENT LIKE '%' || #{query} || '%'
</when>

<!-- 내용 검색 (key의 값이 "c"인 경우) -->


<when test='key=="tc"'>
AND ( BOARD_TITLE LIKE '%' || #{query} || '%' 
OR
 ||  BOARD_CONTENT LIKE '%' || #{query} || '%' ) 
</when>


<!-- 제목내용 검색 (key의 값이 "tc"인 경우) -->


<otherwise>
AND MEMBER_NICKNAME LIKE '%' || #{query} || '%'
</otherwise>

<!-- 다른 검색 = 작성자 검색(key의 값이 "w"인 경우) -->
</choose>


ORDER BY BOARD_NO DESC

</select>









	<resultMap type="QNABoard" id="board_rm">


		<!-- resultMap="board_rm"을 같은 resultMap쪽에서 받는다. 즉 여기서 받는다 -->


		<id property="boardNo" column="Board_no" />


		<!-- Collection 태그를 추가하여 여러행 결과가 조회되는 다른 SELECT를 수행한 후 그결과를 지정된 DTO 필드에 
			대입 -->

		<!-- Board테이블 중 imageList commentList는 여러 행의 결과를 SELECT수행하여 결과를 저장해야 함 -->

		<!-- collection태그의 진짜 의미: SELECT로 조회된 결과를 컬렉션에 담아 지정된 필드에 여럿을 세팅 -->


		<!-- 해당 게시글 이미지의 목록을 조회한 후 필드에 저장할 용도 List<BoardImg>인 imageList라는 필드로 간다 -->







		<collection property="imageList" select="selectImageList"
			column="BOARD_NO" javaType="java.util.ArrayList" ofType="BoardImG" />



		<!-- property = 리스트를 담을 dto의 필드명 select = 실행할 SELECT 문에 붙은 ID column: 조회결과 
			중 지정된 컬럼의 값을 파라미터로 전달 javaType: List라는 컬렉션의 타입을 지정해 둔 것 ofType: 컬렉션에 대한 제네릭 
			타입 -->


		<!-- 해당 게시글 댓글의 목록을 조회한 후 필드에 저장할 용도 -->

		<collection property="commentList"
			select="selectCommentList" column="BOARD_NO"
			javaType="java.util.ArrayList" ofType="Comment" />

		<!-- select = 실행할 SELECT 문에 붙은 ID column: 조회결과 중 지정된 컬럼의 값을 파라미터로 전달 javaType: 
			List라는 컬렉션의 타입을 지정해 둔 것 ofType: 컬렉션에 대한 제네릭 타입 -->

	</resultMap>

	<!-- id태그는 pk역할을 하는 컬럼과 자바의 필드를 연결할 때 사용 result태그는 일반 컬럼과 자바의 DTO필드를 연결할 
		떄 사용 -->







	<select id="selectOne" resultMap="board_rm"> <!-- 별칭 -->
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_CODE, READ_COUNT,
		MEMBER_NO, MEMBER_NICKNAME, MEMBER_IMG,  <!-- 수정 -->
		TO_CHAR(BOARD_WRITE_DATE,'YYYY"년"MM"월"DD"일" HH24:MI:SS')
		BOARD_WRITE_DATE,
		TO_CHAR(BOARD_UPDATE_DATE,'YYYY"년"MM"월"DD"일" HH24:MI:SS') BOARD_UPDATE_DATE,
		QA_STATUS,
		(SELECT COUNT(*) FROM "JJIM" WHERE BOARD_NO =#{boardNo}) LIKE_COUNT,

		(SELECT IMG_PATH || IMG_RENAME FROM "BOARD_IMAGE" WHERE BOARD_NO = #{boardNo}
		AND IMG_ORDER=0) THUMBNAIL,

		(SELECT COUNT(*) FROM "JJIM" WHERE BOARD_NO = #{boardNo} AND
		MEMBER_NO=#{memberNo}) LIKE_CHECK

		FROM "BOARD"
		JOIN "MEMBER"
		USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N' AND BOARD_NO = #{boardNo} AND BOARD_CODE=
		#{boardCode}
	</select>

	<!-- resultMap="board_rm"을 같은 resultMap쪽으로 보낸다 -->



	<select id="selectImageList" resultType="BoardImg">
		SELECT * FROM BOARD_IMAGE WHERE BOARD_NO = #{boardNo} ORDER BY IMG_ORDER
	</select>


	<!-- 상세 조회한 게시글의 댓글 목록 조회 -->

	<select id="selectCommentList" resultType="Comment">


		SELECT LEVEL, C.* FROM
		(SELECT COMMENT_NO, COMMENT_CONTENT,
		TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
		BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, MEMBER_IMG, PARENT_COMMENT_NO,
		COMMENT_DEL_FL   <!--MEMBER_IMG 수정 -->
		FROM "COMMENT"
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_NO = #{boardNo}) C

		WHERE COMMENT_DEL_FL = 'N' OR 0 != ( SELECT COUNT(*) FROM "COMMENT" SUB
		WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
		AND COMMENT_DEL_FL = 'N' )
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO


	</select>




	<!-- 여기까지가 한 보드 불러오는거 -->


	<!-- 조화수 변화 반영 쿼리 -->

	<update id="updateReadCount">

		UPDATE "BOARD" SET READ_COUNT = READ_COUNT+1 WHERE BOARD_NO = #{boardNo}

	</update>



	<!-- 조회수 표시 쿼리 -->
	<select id="selectReadCount">

		SELECT READ_COUNT FROM "BOARD" WHERE BOARD_NO = #{boardNo}

	</select>




	<!-- 여기부터는 삽입 수정 삭제 -->





	<!-- QNA 게시판 삽입 쿼리 -->

	<!-- useGeneratedKeys속성? DB 내부적으로 생성한 키, 즉 DB 시퀀스를 이용하여 해당 키를 전달된 파라미터 (board)의 
		필드(boardNo)로 대입 가능하게 함 -->

	<insert id="boardInsert" useGeneratedKeys="true"
		parameterType="QNABoard">
		<selectKey keyProperty="boardNo" resultType="_int"
			order="BEFORE">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO "BOARD" (
		BOARD_NO,
		BOARD_TITLE,
		BOARD_CONTENT,
		BOARD_WRITE_DATE,
		BOARD_UPDATE_DATE,
		READ_COUNT,
		BOARD_DEL_FL,
		BOARD_CODE,
		MEMBER_NO
		) VALUES (
		#{boardNo},
		#{boardTitle},
		#{boardContent},
		DEFAULT,
		DEFAULT,
		#{readCount},
		DEFAULT,
		#{boardCode},
		#{memberNo}
		)
	</insert>

	<update id="boardDelete">
		UPDATE "BOARD" SET BOARD_DEL_FL = 'Y'
		WHERE BOARD_CODE = #{boardCode}
		AND BOARD_NO = #{boardNo}
		AND MEMBER_NO = #{memberNo}
	</update>



	<update id="boardUpdate">
		UPDATE "BOARD" SET
		BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT = #{boardContent}
		WHERE BOARD_CODE = #{boardCode}
		AND
		BOARD_NO = #{boardNo}
		AND MEMBER_NO = #{memberNo}
	</update>



<!-- 검색 결과 목록 -->
<select id="searchByKeyword" resultType="Board">
    SELECT B.BOARD_NO,
           B.BOARD_TITLE,
           B.MEMBER_NO,
           M.MEMBER_NICKNAME,
           TO_CHAR(B.BOARD_WRITE_DATE, 'YYYY-MM-DD') AS BOARD_WRITE_DATE,
           B.READ_COUNT
    FROM BOARD B
    JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO
    WHERE B.BOARD_DEL_FL = 'N'
      AND B.BOARD_CODE = 4
      AND B.BOARD_TITLE LIKE '%' || #{query} || '%'
    ORDER BY B.BOARD_NO DESC
</select>

</mapper>
