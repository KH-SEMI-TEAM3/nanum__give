<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.kh.semi.board.model.mapper.ShareBoardMapper">

	<resultMap type="ShareBoard" id="board_rm">
		<id property="boardNo" column="BOARD_NO" />
	
		<!--  해당 게시글 댓글 목록 조회 후 필드에 저장 -->
		<collection 
			property="commentList" 
			select="selectCommentList"
			column="BOARD_NO"
			javaType="java.util.ArrayList"
			ofType="Comment"
		/>
	</resultMap>
	
   	<!--  게시글 수 조회  -->
	<select id="getListCount">
		SELECT COUNT(*)
		FROM "SHARE" S
		JOIN "MEMBER" M ON S.MEMBER_NO = M.MEMBER_NO
		WHERE BOARD_DEL_FL = 'N'
		AND M.MEMBER_DEL_FL ='N'
		AND BOARD_CODE = 1
	</select>
	
	<!-- 특정 게시판의 지정된 페이지 목록 조회 -->
	<select id="selectBoardList">
		SELECT 
		B.BOARD_NO, B.BOARD_TITLE, M.MEMBER_NICKNAME, B.READ_COUNT, B.BOARD_CONTENT, B.SHARE_STATUS,

		(SELECT COUNT(*) FROM "SHARE_COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
		(SELECT COUNT(*) FROM "JJIM" J WHERE J.BOARD_NO = B.BOARD_NO) JJIM_COUNT,

		(SELECT SCD.SHARE_BOARD_CATEGORY_DETAIL_NAME 
		FROM "SHARE_CATEGORY_DETAIL" SCD 
		WHERE SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE = B.SHARE_BOARD_CATEGORY_DETAIL_CODE
		) AS SHARE_BOARD_CATEGORY_DETAIL_NAME,

		(SELECT SC.SHARE_BOARD_CATEGORY_NAME
		FROM "SHARE_CATEGORY" SC
		WHERE SC.SHARE_BOARD_CATEGORY_CODE = 
			(SELECT SCD.SHARE_BOARD_CATEGORY_CODE
			FROM "SHARE_CATEGORY_DETAIL" SCD
			WHERE SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE = B.SHARE_BOARD_CATEGORY_DETAIL_CODE)
		) AS SHARE_BOARD_CATEGORY_NAME,
		
		        (SELECT COUNT(*) 
     FROM "COMMENT" C 
     WHERE C.BOARD_NO = B.BOARD_NO  AND C.COMMENT_DEL_FL = 'N') 
     AS COMMENT_COUNT,
		
		<![CDATA[
			CASE 
			  WHEN SYSDATE - B.BOARD_WRITE_DATE < 1/24/60 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)*24*60*60) || '초 전'
			  WHEN SYSDATE - B.BOARD_WRITE_DATE < 1/24 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)*24*60) || '분 전'
			  WHEN SYSDATE - B.BOARD_WRITE_DATE < 1 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)*24) || '시간 전'
			  WHEN SYSDATE - B.BOARD_WRITE_DATE < 30 THEN FLOOR(SYSDATE - B.BOARD_WRITE_DATE) || '일 전'
			  WHEN SYSDATE - B.BOARD_WRITE_DATE < 365 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)/30) || '달 전'
			  ELSE FLOOR((SYSDATE - B.BOARD_WRITE_DATE)/365) || '년 전'
			END AS BOARD_WRITE_DATE
		]]>

		FROM "SHARE" B
		JOIN "MEMBER" M ON B.MEMBER_NO = M.MEMBER_NO

		WHERE B.BOARD_DEL_FL = 'N'
		AND M.MEMBER_DEL_FL ='N'
		ORDER BY B.BOARD_NO DESC
	</select>

	<select id="selectOne"> <!-- resultMap="board_rm" -->
		SELECT 
		S.BOARD_NO, S.BOARD_TITLE, S.BOARD_CONTENT, S.READ_COUNT, 
		S.MEMBER_NO, M.MEMBER_NICKNAME, M.MEMBER_IMG,
		S.SHARE_STATUS, 
		TO_CHAR(S.BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE,
		TO_CHAR(S.BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_UPDATE_DATE,

		(SELECT COUNT(*) 
		FROM "JJIM"
		WHERE BOARD_NO = #{boardNo}) JJIM_COUNT,

		(SELECT COUNT(*)
		FROM "JJIM"
		WHERE BOARD_NO = #{boardNo}
		AND MEMBER_NO = #{memberNo}) JJIM_CHECK,
		
		S.SHARE_BOARD_CATEGORY_DETAIL_CODE,
		
		(SELECT SCD.SHARE_BOARD_CATEGORY_DETAIL_NAME 
		FROM "SHARE_CATEGORY_DETAIL" SCD 
		WHERE SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE = S.SHARE_BOARD_CATEGORY_DETAIL_CODE
		) AS SHARE_BOARD_CATEGORY_DETAIL_NAME,
		
		(SELECT SC.SHARE_BOARD_CATEGORY_CODE
		FROM "SHARE_CATEGORY" SC
		WHERE SC.SHARE_BOARD_CATEGORY_CODE = 
			(SELECT SCD.SHARE_BOARD_CATEGORY_CODE
			FROM "SHARE_CATEGORY_DETAIL" SCD
			WHERE SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE = S.SHARE_BOARD_CATEGORY_DETAIL_CODE)
		) AS SHARE_BOARD_CATEGORY_CODE,
		
		(SELECT SC.SHARE_BOARD_CATEGORY_NAME
		FROM "SHARE_CATEGORY" SC
		WHERE SC.SHARE_BOARD_CATEGORY_CODE = 
			(SELECT SCD.SHARE_BOARD_CATEGORY_CODE
			FROM "SHARE_CATEGORY_DETAIL" SCD
			WHERE SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE = S.SHARE_BOARD_CATEGORY_DETAIL_CODE)
		) AS SHARE_BOARD_CATEGORY_NAME

		FROM "SHARE" S
		JOIN "MEMBER" M ON S.MEMBER_NO = M.MEMBER_NO
		WHERE S.BOARD_DEL_FL = 'N'
		AND M.MEMBER_DEL_FL ='N'
		AND S.BOARD_NO = #{boardNo}
		AND S.BOARD_CODE = #{boardCode}
	</select>
	
	<select id="selectCommentList" resultType="Comment">
		SELECT LEVEL, C.* FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT,
			    TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
			    BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, MEMBER_IMG, PARENT_COMMENT_NO, COMMENT_DEL_FL
			FROM "SHARE_COMMENT"
			JOIN MEMBER USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
						WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
						AND COMMENT_DEL_FL = 'N')
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO
	</select>
	
	<!-- 찜 해제 -->
	<delete id="deleteBoardJJim">
		DELETE FROM "JJIM"
		WHERE MEMBER_NO = #{memberNo}
		AND BOARD_NO = #{boardNo}
	</delete>
	<!-- 찜 체크 -->
	<insert id="insertBoardJJim">
		INSERT INTO "JJIM"(MEMBER_NO, BOARD_NO)
		VALUES(#{memberNo}, #{boardNo})
	</insert>
	<!--  찜 수 조회 -->
	<select id="selectBoardJJim">
		SELECT COUNT(*) FROM "JJIM"
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	
	<!--  조회 수 1 증가  -->
	<update id="updateReadCount">
		UPDATE "SHARE" SET
		READ_COUNT = READ_COUNT + 1
		WHERE BOARD_NO = #{boardNo}
	</update>

	<!-- 조회 수 조회  -->
	<select id="selectReadCount">
		SELECT READ_COUNT
		FROM "SHARE"
		WHERE BOARD_NO = #{boardNo}
	</select>
	

	<update id="updateShareStatus">
	    UPDATE "SHARE"
	    SET SHARE_STATUS = #{shareStatus,jdbcType=CHAR}
	    WHERE BOARD_NO = #{boardNo}
	</update>

	<select id="selectRecent" resultType="ShareBoard">
	SELECT 
	  B.BOARD_NO, 
	  B.BOARD_TITLE, 
	  B.BOARD_CONTENT, 
	  B.READ_COUNT, 
	  B.SHARE_STATUS,
	  M.MEMBER_NICKNAME,
	  B.SHARE_BOARD_CATEGORY_DETAIL_CODE,
	  SCD.SHARE_BOARD_CATEGORY_DETAIL_NAME AS SHARE_BOARD_CATEGORY_DETAIL_NAME,
	  SC.SHARE_BOARD_CATEGORY_NAME AS SHARE_BOARD_CATEGORY_NAME
	
	FROM "SHARE" B
	JOIN "MEMBER" M ON B.MEMBER_NO = M.MEMBER_NO
	LEFT JOIN "SHARE_CATEGORY_DETAIL" SCD ON B.SHARE_BOARD_CATEGORY_DETAIL_CODE = SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE
	LEFT JOIN "SHARE_CATEGORY" SC ON SCD.SHARE_BOARD_CATEGORY_CODE = SC.SHARE_BOARD_CATEGORY_CODE
	
	WHERE B.BOARD_DEL_FL = 'N'
	ORDER BY B.BOARD_WRITE_DATE DESC
	FETCH FIRST 8 ROWS ONLY
	</select>

	<!--  내 찜 리스트-->
	<select id="selectJjimList" resultType="ShareBoard">
	  SELECT 
	    B.BOARD_NO,
	    B.BOARD_TITLE,
	    M.MEMBER_NICKNAME,
	    B.READ_COUNT,
	    B.BOARD_CONTENT,
	    B.SHARE_STATUS,
	
	    (SELECT COUNT(*) FROM "SHARE_COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO) AS COMMENT_COUNT,
	    (SELECT COUNT(*) FROM "JJIM" J WHERE J.BOARD_NO = B.BOARD_NO) AS JJIM_COUNT,
	
	    SCD.SHARE_BOARD_CATEGORY_DETAIL_NAME,
	    SC.SHARE_BOARD_CATEGORY_NAME,
	
	    <![CDATA[
	    CASE 
	      WHEN SYSDATE - B.BOARD_WRITE_DATE < 1 / 24 / 60 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'
	      WHEN SYSDATE - B.BOARD_WRITE_DATE < 1 / 24 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE) * 24 * 60) || '분 전'
	      WHEN SYSDATE - B.BOARD_WRITE_DATE < 1 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE) * 24) || '시간 전'
	      WHEN SYSDATE - B.BOARD_WRITE_DATE < 30 THEN FLOOR(SYSDATE - B.BOARD_WRITE_DATE) || '일 전'
	      WHEN SYSDATE - B.BOARD_WRITE_DATE < 365 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE) / 30) || '달 전'
	      ELSE FLOOR((SYSDATE - B.BOARD_WRITE_DATE) / 365) || '년 전'
	    END AS BOARD_WRITE_DATE
	    ]]>
	
	  FROM "JJIM" J
	  JOIN "SHARE" B ON J.BOARD_NO = B.BOARD_NO
	  JOIN "MEMBER" M ON B.MEMBER_NO = M.MEMBER_NO
	  LEFT JOIN "SHARE_CATEGORY_DETAIL" SCD ON B.SHARE_BOARD_CATEGORY_DETAIL_CODE = SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE
	  LEFT JOIN "SHARE_CATEGORY" SC ON SCD.SHARE_BOARD_CATEGORY_CODE = SC.SHARE_BOARD_CATEGORY_CODE
	
	  WHERE J.MEMBER_NO = #{memberNo}
	    AND B.BOARD_DEL_FL = 'N'
	    AND M.MEMBER_DEL_FL = 'N'
	    AND B.BOARD_CODE = 1
	
	  ORDER BY B.BOARD_NO DESC
	</select>
	
	
	<!-- 검색어만 있을 때 게시글 수 조회 -->
	<select id="getSearchOnlyCount" resultType="int" parameterType="map">
	    SELECT COUNT(*)
	    FROM "SHARE" B
	    JOIN "MEMBER" M ON B.MEMBER_NO = M.MEMBER_NO
	    WHERE B.BOARD_DEL_FL = 'N'
	      AND M.MEMBER_DEL_FL = 'N'
	      AND (
	        B.BOARD_TITLE LIKE'%' || #{searchKeyword} || '%'
	        OR B.BOARD_CONTENT LIKE '%' || #{searchKeyword} || '%'
	      )
	</select>
	
	<!-- 카테고리만 있을 때 게시글 수 조회 -->
	<select id="getCategoryOnlyCount" resultType="int" parameterType="map">
	    SELECT COUNT(*)
	    FROM "SHARE" B
	    JOIN "MEMBER" M ON B.MEMBER_NO = M.MEMBER_NO
		JOIN "SHARE_CATEGORY_DETAIL" SCD ON B."SHARE_BOARD_CATEGORY_DETAIL_CODE" = SCD."SHARE_BOARD_CATEGORY_DETAIL_CODE"
		JOIN "SHARE_CATEGORY" SC ON SCD."SHARE_BOARD_CATEGORY_CODE" = SC."SHARE_BOARD_CATEGORY_CODE"
	    WHERE B.BOARD_DEL_FL = 'N'
	      AND M.MEMBER_DEL_FL = 'N'
	      AND SCD.SHARE_BOARD_CATEGORY_DETAIL_NAME = #{subCategory}
	</select>
	
	<!-- 검색어 + 카테고리 둘 다 있을 때 게시글 수 조회 -->
	<select id="getSearchAndCategoryCount" resultType="int" parameterType="map">
	    SELECT COUNT(*)
	    FROM "SHARE" B
	    JOIN "MEMBER" M ON B.MEMBER_NO = M.MEMBER_NO
   		JOIN "SHARE_CATEGORY_DETAIL" SCD ON B."SHARE_BOARD_CATEGORY_DETAIL_CODE" = SCD."SHARE_BOARD_CATEGORY_DETAIL_CODE"
		JOIN "SHARE_CATEGORY" SC ON SCD."SHARE_BOARD_CATEGORY_CODE" = SC."SHARE_BOARD_CATEGORY_CODE"
	    WHERE B.BOARD_DEL_FL = 'N'
	      AND M.MEMBER_DEL_FL = 'N'
	      AND SCD.SHARE_BOARD_CATEGORY_DETAIL_NAME = #{subCategory}
	      AND (
	        B.BOARD_TITLE LIKE '%' || #{searchKeyword} || '%'
	        OR B.BOARD_CONTENT LIKE '%' || #{searchKeyword} || '%'
	      )
	</select>
	
	
	<!-- 검색만 있을 때 게시글 목록 조회 -->
	<select id="selectSearchOnlyList">
	    SELECT 
	        B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, M.MEMBER_NICKNAME, B.READ_COUNT, B.BOARD_CONTENT, B.SHARE_STATUS,
	
	        (SELECT COUNT(*) FROM "SHARE_COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
	        (SELECT COUNT(*) FROM "JJIM" J WHERE J.BOARD_NO = B.BOARD_NO) JJIM_COUNT,
	
	        (SELECT SCD.SHARE_BOARD_CATEGORY_DETAIL_NAME 
	        FROM "SHARE_CATEGORY_DETAIL" SCD 
	        WHERE SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE = B.SHARE_BOARD_CATEGORY_DETAIL_CODE) AS SHARE_BOARD_CATEGORY_DETAIL_NAME,
	
	        (SELECT SC.SHARE_BOARD_CATEGORY_NAME
	        FROM "SHARE_CATEGORY" SC
	        WHERE SC.SHARE_BOARD_CATEGORY_CODE = 
	            (SELECT SCD.SHARE_BOARD_CATEGORY_CODE
	            FROM "SHARE_CATEGORY_DETAIL" SCD
	            WHERE SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE = B.SHARE_BOARD_CATEGORY_DETAIL_CODE)) AS SHARE_BOARD_CATEGORY_NAME,
	
	        <![CDATA[
	            CASE 
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 1/24/60 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)*24*60*60) || '초 전'
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 1/24 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)*24*60) || '분 전'
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 1 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)*24) || '시간 전'
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 30 THEN FLOOR(SYSDATE - B.BOARD_WRITE_DATE) || '일 전'
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 365 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)/30) || '달 전'
	                ELSE FLOOR((SYSDATE - B.BOARD_WRITE_DATE)/365) || '년 전'
	            END AS BOARD_WRITE_DATE
	        ]]>
	    FROM "SHARE" B
	    JOIN "MEMBER" M ON B.MEMBER_NO = M.MEMBER_NO
	    WHERE B.BOARD_DEL_FL = 'N'
	    AND M.MEMBER_DEL_FL = 'N'
	    AND (
			  (#{searchType} = 'title' AND B.BOARD_TITLE LIKE '%' || #{searchKeyword} || '%')
			  OR (#{searchType} = 'content' AND B.BOARD_CONTENT LIKE '%' || #{searchKeyword} || '%')
			  OR (#{searchType} = 'nickname' AND M.MEMBER_NICKNAME LIKE '%' || #{searchKeyword} || '%')
	    )
	    ORDER BY B.BOARD_NO DESC
	</select>
	
	<!-- 카테고리만 있을 때 게시글 목록 조회 -->
	<select id="selectCategoryOnlyList">
	    SELECT 
	        B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, M.MEMBER_NICKNAME, B.READ_COUNT, B.BOARD_CONTENT, B.SHARE_STATUS,
	
	        (SELECT COUNT(*) FROM "SHARE_COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
	        (SELECT COUNT(*) FROM "JJIM" J WHERE J.BOARD_NO = B.BOARD_NO) JJIM_COUNT,
	
	        (SELECT SCD.SHARE_BOARD_CATEGORY_DETAIL_NAME 
	        FROM "SHARE_CATEGORY_DETAIL" SCD 
	        WHERE SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE = B.SHARE_BOARD_CATEGORY_DETAIL_CODE) AS SHARE_BOARD_CATEGORY_DETAIL_NAME,
	
	        (SELECT SC.SHARE_BOARD_CATEGORY_NAME
	        FROM "SHARE_CATEGORY" SC
	        WHERE SC.SHARE_BOARD_CATEGORY_CODE = 
	            (SELECT SCD.SHARE_BOARD_CATEGORY_CODE
	            FROM "SHARE_CATEGORY_DETAIL" SCD
	            WHERE SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE = B.SHARE_BOARD_CATEGORY_DETAIL_CODE)) AS SHARE_BOARD_CATEGORY_NAME,
	
	        <![CDATA[
	            CASE 
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 1/24/60 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)*24*60*60) || '초 전'
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 1/24 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)*24*60) || '분 전'
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 1 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)*24) || '시간 전'
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 30 THEN FLOOR(SYSDATE - B.BOARD_WRITE_DATE) || '일 전'
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 365 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)/30) || '달 전'
	                ELSE FLOOR((SYSDATE - B.BOARD_WRITE_DATE)/365) || '년 전'
	            END AS BOARD_WRITE_DATE
	        ]]>
	    FROM "SHARE" B
	    JOIN "MEMBER" M ON B.MEMBER_NO = M.MEMBER_NO
   		JOIN "SHARE_CATEGORY_DETAIL" SCD ON B."SHARE_BOARD_CATEGORY_DETAIL_CODE" = SCD."SHARE_BOARD_CATEGORY_DETAIL_CODE"
		JOIN "SHARE_CATEGORY" SC ON SCD."SHARE_BOARD_CATEGORY_CODE" = SC."SHARE_BOARD_CATEGORY_CODE"
	    WHERE B.BOARD_DEL_FL = 'N'
	    AND M.MEMBER_DEL_FL = 'N'
	    AND SCD.SHARE_BOARD_CATEGORY_DETAIL_NAME = #{subCategory}
	    ORDER BY B.BOARD_NO DESC
	</select>
	
	
	
	<!-- 검색 + 카테고리 있을 때 게시글 목록 조회 -->
	<select id="selectSearchAndCategoryList">
	    SELECT 
	        B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, M.MEMBER_NICKNAME, B.READ_COUNT, B.BOARD_CONTENT, B.SHARE_STATUS,
	
	        (SELECT COUNT(*) FROM "SHARE_COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
	        (SELECT COUNT(*) FROM "JJIM" J WHERE J.BOARD_NO = B.BOARD_NO) JJIM_COUNT,
	
	        (SELECT SCD.SHARE_BOARD_CATEGORY_DETAIL_NAME 
	        FROM "SHARE_CATEGORY_DETAIL" SCD 
	        WHERE SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE = B.SHARE_BOARD_CATEGORY_DETAIL_CODE) AS SHARE_BOARD_CATEGORY_DETAIL_NAME,
	
	        (SELECT SC.SHARE_BOARD_CATEGORY_NAME
	        FROM "SHARE_CATEGORY" SC
	        WHERE SC.SHARE_BOARD_CATEGORY_CODE = 
	            (SELECT SCD.SHARE_BOARD_CATEGORY_CODE
	            FROM "SHARE_CATEGORY_DETAIL" SCD
	            WHERE SCD.SHARE_BOARD_CATEGORY_DETAIL_CODE = B.SHARE_BOARD_CATEGORY_DETAIL_CODE)) AS SHARE_BOARD_CATEGORY_NAME,
	
	        <![CDATA[
	            CASE 
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 1/24/60 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)*24*60*60) || '초 전'
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 1/24 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)*24*60) || '분 전'
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 1 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)*24) || '시간 전'
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 30 THEN FLOOR(SYSDATE - B.BOARD_WRITE_DATE) || '일 전'
	                WHEN SYSDATE - B.BOARD_WRITE_DATE < 365 THEN FLOOR((SYSDATE - B.BOARD_WRITE_DATE)/30) || '달 전'
	                ELSE FLOOR((SYSDATE - B.BOARD_WRITE_DATE)/365) || '년 전'
	            END AS BOARD_WRITE_DATE
	        ]]>
	    FROM "SHARE" B
	    JOIN "MEMBER" M ON B.MEMBER_NO = M.MEMBER_NO
   		JOIN "SHARE_CATEGORY_DETAIL" SCD ON B."SHARE_BOARD_CATEGORY_DETAIL_CODE" = SCD."SHARE_BOARD_CATEGORY_DETAIL_CODE"
		JOIN "SHARE_CATEGORY" SC ON SCD."SHARE_BOARD_CATEGORY_CODE" = SC."SHARE_BOARD_CATEGORY_CODE"
	    WHERE B.BOARD_DEL_FL = 'N'
	    AND M.MEMBER_DEL_FL = 'N'
	    AND SCD.SHARE_BOARD_CATEGORY_DETAIL_NAME = #{subCategory}
	    AND (
			  (#{searchType} = 'title' AND B.BOARD_TITLE LIKE '%' || #{searchKeyword} || '%')
			  OR (#{searchType} = 'content' AND B.BOARD_CONTENT LIKE '%' || #{searchKeyword} || '%')
			  OR (#{searchType} = 'nickname' AND M.MEMBER_NICKNAME LIKE '%' || #{searchKeyword} || '%')
	    )
	    ORDER BY B.BOARD_NO DESC
	</select>
	
	
</mapper>